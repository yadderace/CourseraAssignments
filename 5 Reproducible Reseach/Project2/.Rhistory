qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(dspl, hwy, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv.~, binwidth = 2)
qplot(hwy, data = mpg, facets = drv.~ , binwidth = 2)
qplot(hwy, data = mpg, binwidth = 2, facets = drv.~)
qplot(hwy, data = mpg, binwidth = 2)
qplot(hwy, data = mpg, facets = drv~. , binwidth = 2)
library(swirl)
swirl()
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim = (-3,3))
plot(myx, myy, type="l", ylim = c(-3,3))
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(ddrv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = black)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Milleage", title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = "cut")
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depht, price))
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$cut, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) +geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2movies)
library(ggplot2movies)
?trellis.par.get()
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
print(g)
library(Swirl)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
plot(as.dendrogram(hc), h = 1.5, col = "blue")
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mtcars)
heatmap(mt)
mt
plot(denmt)
ditsmt
distmt
cmat
points(cx, cy,col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, x, cx, cy)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1 <- svd(dataMatrix)
svd1$v[0,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,c(1,2)]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% svd1$[1]
a1 <- svd1$u[,1] %*% svd1$d[1]
a1 <- svd1$u %*% svd1$d[1]
a1 <- svd1$u %*% svd1$d[1]
a1 <- svd1$u[,1] %*% svd1$d[1]
a1 <- 3
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[0,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
name(sub1[1:12])
name(sub1[1:12,])
names(sub1[1:12,])
names(sub1)[1:12]
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub[,1:3])
dist(sub[,1:3])
dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust((mdist))
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
STORM_DATA_FILE_NAME <- "StormData.csv";
getwd()
setwd("C:/Users/yadde/Documents/CourseraAssignments/Reproducible Reseach/Project2")
storm_data <- read.csv(STORM_DATA_FILE_NAME);
storm_data$BGN_DATE <- as.Date(storm_data$BGN_DATE, format = "%m/%d/%Y");
storm_data$END_DATE <- as.Date(storm_data$END_DATE, format = "%m/%d/%Y");
transform_exp <- function(element){
if(length(element) > 0){
if(!is.na(as.numeric(element)))
{
#All numeric 1..8 is 10
10
}else{
#We have to find the correct value for the character
switch(element,
"K" = 10 ^ 3,
"k" = 10 ^ 3,
"H" = 10 ^ 2,
"h" = 10 ^ 2,
"M" =  10 ^ 6,
"m" =  10 ^ 6,
"B" = 10 ^ 9,
"b" = 10 ^ 9,
"+" = 1,
"-" = 0,
"?" = 0,
0);
}
}else{
#No characters, the value is zero
0;
}
};
storm_data$PROPDMGEXP_VALUE <- Vectorize(transform_exp)(as.character(storm_data$PROPDMGEXP));
storm_data$CROPDMGEXP_VALUE <- Vectorize(transform_exp)(as.character(storm_data$CROPDMGEXP));
storm_data_original <- storm_data
class(storm_data$EVTYPE)
storm_data$EVTYPE
View(storm_data)
aggregate(FATALITIES ~ EVTYPE, data = storm_data, sum)
fatalities_by_events <- aggregate(FATALITIES ~ EVTYPE, data = storm_data, sum)
View(fatalities_by_events)
injuries_by_events <- aggregate(INJURIES ~ EVTYPE, data = storm_data, sum)
library(dplyr)
arrange(fatalities_by_events, FATALITIES)
?arrange
fatalities_by_events <- arrange(fatalities_by_events, desc(FATALITIES))
View(fatalities_by_events)
top5_fatalities_by_events <- fatalities_by_events[1:5,]
View(top5_fatalities_by_events)
injuries_by_events <- arrange(injuries_by_events, desc(INJURIES));
top5_injuries_by_events <- injuries_by_events[1:5,];
View(injuries_by_events)
View(top5_injuries_by_events)
View(top5_fatalities_by_events)
colnames(top5_fatalities_by_events)[2] <- "Value";
colnames(top5_injuries_by_events)[2] <- "Value";
EVENT_HEADER <- "Event";
VALUE_HEADER <- "Value";
FATALITY_TYPE <- "Fatality";
INJURY_TYPE <- "Injury";
colnames(top5_fatalities_by_events)[1] <- EVENT_HEADER;
colnames(top5_injuries_by_events)[1] <- EVENT_HEADER;
colnames(top5_fatalities_by_events)[2] <- VALUE_HEADER;
colnames(top5_injuries_by_events)[2] <- VALUE_HEADER;
top5_fatalities_by_events$Type <- FATALITY_TYPE;
top5_injuries_by_events$Type <- INJURY_TYPE;
rbind(top5_fatalities_by_events, top5_injuries_by_events);
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value, fill = Type));
library(ggplot2)
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value, fill = Type));
top5_harmful_events <- rbind(top5_fatalities_by_events, top5_injuries_by_events);
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value, fill = Type));
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value, fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value));
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar() +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type);
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value, fill = Event));
gg <- g + geom_bar() +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value, fill = factor(Event)));
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = Type,y = Value, fill = factor(Event)));
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
View(top5_harmful_events)
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value));
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = Event,y = Value));
gg <- g + geom_bar(stat="identity") +
facet_grid(.~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value, color = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Type),y = Value));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_wrap(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_wrap(~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_wrap(Type~) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg <- g + geom_bar(stat="identity") +
facet_wrap(Type~) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg <- g + geom_bar(stat="identity") +
facet_wrap(Type~.) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg <- g + geom_bar(stat="identity") +
facet_wrap(~Type) +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_wrap(~Type, scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value, fill = factor(Event)));
gg <- g + geom_bar(stat="identity") +
+   facet_grid(Type~., scales = "free_y") +
+   labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg <- g + geom_bar(stat="identity") +
+   facet_grid(Type~., scales = "free_y") +
+   labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value));
gg <- g + geom_bar(stat="identity") +
+   facet_grid(Type~., scales = "free_y") +
+   labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value, fill = factor(Event)));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events");
gg
gg + scale_color_brewer(palette = "Dark2")
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value));
gg <- g + geom_bar(stat="identity")
+   facet_grid(Type~., scales = "free_y")
+   labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", aesthetic = "Hola");
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value));
gg <- g + geom_bar(stat="identity")
+   facet_grid(Type~., scales = "free_y")
+   labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", aesthetic = "Hola");
gg <- g + geom_bar(stat="identity") + facet_grid(Type~., scales = "free_y") + labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", aesthetic = "Hola");
gg
g <- ggplot(top5_harmful_events, aes(x = factor(Event),y = Value, fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", aesthetic = "Hola");
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", fill = "Hola");
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", fill = "Hola") + axis.title.x = element_blank();
gg <- g + geom_bar(stat="identity") + facet_grid(Type~., scales = "free_y") + labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", fill = "Hola") + axis.title.x = element_blank();
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(x="Type of Harmful", y="Value", title="Top 5 Harmful Events", aesthetic = "Hola");
gg + theme(axis.title.x = element_blank());
gg + theme(axis.text.x =  element_blank());
View(storm_data)
storm_data$CROPDMG_VALUE <- storm_data$CROPDMG * storm_data$CROPDMGEXP_VALUE;
View(storm_data)
storm_data$PROPDMG_vALUE <- storm_data$PROPDMG * storm_data$PROPDMGEXP_VALUE;
cropdmg_by_events <- aggregate(CROPDMG_VALUE ~ EVTYPE, data = storm_data, sum);
propdmg_by_events <- aggregate(PROPDMG_vALUE ~ EVTYPE, data = storm_data, sum);
View(cropdmg_by_events)
cropdmg_by_events <- arrange(cropdmg_by_events, desc(CROPDMG_VALUE));
top5_cropdmg_by_events <- cropdmg_by_events[1:5,];
View(top5_cropdmg_by_events)
propdmg_by_events <- arrange(propdmg_by_events, desc(PROPDMG_vALUE));
top5_propdmg_by_events <- propdmg_by_events[1:5,];
View(top5_propdmg_by_events)
colnames(top5_cropdmg_by_events)[1] <- EVENT_HEADER;
colnames(top5_propdmg_by_events)[1] <- EVENT_HEADER;
colnames(top5_cropdmg_by_events)[2] <- DAMAGE_HEADER;
colnames(top5_propdmg_by_events)[2] <- DAMAGE_HEADER;
CROP_DAMAGE_TYPE <- "Crop Damage";
PROPERTY_DAMAGE_TYPE <- "Property Damage";
colnames(top5_cropdmg_by_events)[1] <- EVENT_HEADER;
colnames(top5_propdmg_by_events)[1] <- EVENT_HEADER;
colnames(top5_cropdmg_by_events)[2] <- DAMAGE_HEADER;
colnames(top5_propdmg_by_events)[2] <- DAMAGE_HEADER;
DAMAGE_HEADER <- "Damage";
colnames(top5_cropdmg_by_events)[1] <- EVENT_HEADER;
colnames(top5_propdmg_by_events)[1] <- EVENT_HEADER;
colnames(top5_cropdmg_by_events)[2] <- DAMAGE_HEADER;
colnames(top5_propdmg_by_events)[2] <- DAMAGE_HEADER;
top5_cropdmg_by_events$Type <- CROP_DAMAGE_TYPE;
top5_propdmg_by_events$Type <- PROPERTY_DAMAGE_TYPE;
top5_economic_events <- rbind(top5_cropdmg_by_events, top5_propdmg_by_events);
g <- ggplot(top5_economic_events, aes(x = factor(Event),y = Damage, fill = Event));
facet_grid(Type~., scales = "free_y") +
labs(y="Damage $", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage $", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg
g <- ggplot(top5_economic_events, aes(x = factor(Event),y = Damage / (10 ^ 3), fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage ($)", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg
options(scipen=999);
gg
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage ($)", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
g <- ggplot(top5_economic_events, aes(x = factor(Event),y = Damage / (10 ^ 3), fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage ($)", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg
g <- ggplot(top5_economic_events, aes(x = factor(Event),y = Damage / (10 ^ 6), fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage ($)", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg
g <- ggplot(top5_economic_events, aes(x = factor(Event),y = Damage / (10 ^ 6), fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage (MDollars)", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg
g <- ggplot(top5_economic_events, aes(x = factor(Event),y = Damage / (10 ^ 9), fill = Event));
gg <- g + geom_bar(stat="identity") +
facet_grid(Type~., scales = "free_y") +
labs(y="Damage (MDollars)", title="Top 5 Economic Harmful Damage") +
theme(axis.text.x =  element_blank(), axis.title.x = element_blank());
gg
View(top5_harmful_events)
View(top5_economic_events)
